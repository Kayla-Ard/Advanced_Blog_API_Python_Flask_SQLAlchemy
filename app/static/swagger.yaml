openapi: 3.0.0
info:
  title: My Flask API
  description: API documentation for my Flask application
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Development server

paths:
  /token:
    post:
      summary: Obtain JWT token
      description: Endpoint to authenticate and receive a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: JWT token obtained successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /users:
    get:
      summary: Retrieve all users
      description: Endpoint to retrieve a list of all registered users.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create a new user
      description: Endpoint to create a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /users/{id}:
    get:
      summary: Retrieve a user by ID
      description: Endpoint to retrieve a user by their unique ID.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      summary: Update a user by ID
      description: Endpoint to update an existing user's information by their unique ID.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a user by ID
      description: Endpoint to delete an existing user by their unique ID.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - first_name
        - last_name
        - username
        - email
        - password

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


